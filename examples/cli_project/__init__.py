#!/usr/bin/env python3
"""
Cli Project Package

CLI Tool

This package follows Go-ish Python patterns with clean modular organization.

Generated by: Go-ish Python Scaffolder
Author: Yamaç Eren Ay

Usage:
    from cli_project import DefaultService, ServiceContext, AppConfig
    
    config = AppConfig(app_name="my_app", output_dir="./output", verbose=True, config_file=None)
    with ServiceContext(config) as service:
        result = service.execute({"data": "example"})
"""

from __future__ import annotations

# Package metadata
__version__ = "0.1.0"
__author__ = "Yamaç Eren Ay"
__description__ = "CLI Tool"

# Core interfaces
from .interfaces import Processor, Handler, Repository, Service

# Core implementations
from .core import DefaultProcessor, DefaultHandler, DefaultRepository, DefaultService

# Context managers
from .contexts import ServiceContext, DataContext

# CLI components
from .cli import build_parser, parse_args_to_config, validate_args
from .cli import configure_logging

# Configuration
from .config import AppConfig, create_config

# Public API
__all__ = ['Processor', 'Handler', 'Repository', 'Service', 'DefaultProcessor', 'DefaultHandler', 'DefaultRepository', 'DefaultService', 'AppConfig', 'create_config', 'ServiceContext', 'DataContext', 'build_parser', 'parse_args_to_config', 'validate_args', 'configure_logging']
