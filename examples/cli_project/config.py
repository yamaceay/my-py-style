#!/usr/bin/env python3
"""
Configuration Management

This module defines immutable configuration objects and canonicalization
functions. Follows the principle of single source of truth for all settings.

Generated by: Go-ish Python Scaffolder
Author: YamaÃ§ Eren Ay
Modification Guidelines:
- Use @dataclass(frozen=True) for immutable config
- Add validation in create_config() function
- Keep configuration flat and explicit
- No global state or hidden defaults
"""

from __future__ import annotations
from dataclasses import dataclass
from pathlib import Path

@dataclass(frozen=True)
class AppConfig:
    app_name: str
    output_dir: Path
    verbose: bool
    config_file: str | None

def create_config(
    app_name: str,
    output_dir: str,
    verbose: bool = False,
    config_file: str | None = None
) -> AppConfig:
    return AppConfig(
        app_name=app_name,
        output_dir=Path(output_dir),
        verbose=verbose,
        config_file=config_file
    )
